name: Flutter Tests

on:
  pull_request:
    types: [opened, synchronize, reopened]
  push:
    branches: [main, develop]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.32.5'
          channel: 'stable'
          
      - name: Install lcov
        run: sudo apt-get update && sudo apt-get install -y lcov
        
      - name: Install dependencies
        run: flutter pub get
        
      - name: Analyze code
        run: flutter analyze
        
      - name: Format check
        run: dart format --set-exit-if-changed .
        
      - name: Run tests with coverage
        id: run-tests
        run: |
          flutter test --coverage --reporter=json > test-results.json || true
          flutter test --coverage --reporter=compact > test-results.txt || true
          echo "exit_code=$?" >> $GITHUB_OUTPUT
          
      - name: Generate coverage report
        if: always()
        run: |
          if [ -f coverage/lcov.info ]; then
            genhtml coverage/lcov.info -o coverage/html
          else
            echo "No coverage data found"
            mkdir -p coverage/html
            echo "<html><body><h1>No coverage data available</h1></body></html>" > coverage/html/index.html
          fi
          
      - name: Upload coverage to Codecov
        if: always() && steps.run-tests.outputs.exit_code == '0'
        uses: codecov/codecov-action@v3
        with:
          file: coverage/lcov.info
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false
          
      - name: Upload coverage report as artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage/html/
          
      - name: Create comment template
        run: |
          cat > comment-template.md << 'EOF'
          ## テスト結果
          
          $STATUS_EMOJI **テストステータス**: $STATUS_TEXT
          
          $TEST_SUMMARY
          $COVERAGE_INFO
          
          ### 実行されたチェック
          - ✅ コード分析 (flutter analyze)
          - ✅ フォーマットチェック (dart format)
          - $TEST_ICON 単体テスト (flutter test)
          - $COVERAGE_ICON カバレッジ測定
          
          $COVERAGE_SECTION
          
          ### テスト詳細
          ```
          $TEST_OUTPUT
          ```
          
          $FAILURE_MESSAGE
          
          ---
          *このコメントは自動生成されています*
          EOF
          
      - name: Comment test results
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            
            // テンプレートを読み込み
            let template = fs.readFileSync('comment-template.md', 'utf8');
            
            // 変数を置換
            const testSuccess = '${{ steps.run-tests.outputs.exit_code }}' === '0';
            
            template = template
              .replace(/\$STATUS_EMOJI/g, testSuccess ? '✅' : '❌')
              .replace(/\$STATUS_TEXT/g, testSuccess ? '成功' : '失敗')
              .replace(/\$TEST_ICON/g, testSuccess ? '✅' : '❌')
              .replace(/\$COVERAGE_ICON/g, testSuccess ? '✅' : '❌')
              .replace(/\$TEST_OUTPUT/g, fs.readFileSync('test-results.txt', 'utf8'))
              .replace(/\$FAILURE_MESSAGE/g, testSuccess ? '' : '### 修正が必要\nテストが失敗しています。上記のエラーを確認して修正してください。');
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: template
            }); 